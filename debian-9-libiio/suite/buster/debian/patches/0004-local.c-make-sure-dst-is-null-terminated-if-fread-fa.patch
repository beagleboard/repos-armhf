From 6abaaec81439f5ce8f1dd10dbf711c62d63d63e9 Mon Sep 17 00:00:00 2001
From: Adrian Suciu <adrian.suciu@analog.com>
Date: Tue, 9 Jul 2019 12:20:22 +0300
Subject: [PATCH 04/12] local.c: make sure dst is null-terminated if fread
 fails

This should fix coverity issue:

*** CID 343595:  Memory - illegal accesses  (STRING_NULL)
/home/travis/build/analogdevicesinc/libiio/local.c: 1090 in local_get_trigger()
1087             nb = dev->ctx->nb_devices;
1088             for (i = 0; i < (size_t) nb; i++) {
1089                     const struct iio_device *cur = dev->ctx->devices[i];
>>>     CID 343595:  Memory - illegal accesses  (STRING_NULL)
>>>     Passing unterminated string "buf" to "strcmp", which expects a null-terminated string.
1090                     if (cur->name && !strcmp(cur->name, buf)) {
1091                             *trigger = cur;

Signed-off-by: Adrian Suciu <adrian.suciu@analog.com>
---
 local.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/local.c b/local.c
index d05afb6..5b51e18 100644
--- a/local.c
+++ b/local.c
@@ -717,6 +717,8 @@ static ssize_t local_read_dev_attr(const struct iio_device *dev,
 	ret = fread(dst, 1, len, f);
 	if (ret > 0)
 		dst[ret - 1] = '\0';
+	else
+		dst[0] = '\0';
 	fflush(f);
 	if (ferror(f))
 		ret = -errno;
-- 
2.20.1

